openapi: 3.0.3
info:
  title: Vinta Boilerplate API
  version: 0.1.0
  description: A Django project boilerplate with Vinta's best practices
paths:
  /api/admin-invites/:
    get:
      operationId: admin_invites_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - admin-invites
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAdminInviteList'
          description: ''
    post:
      operationId: admin_invites_create
      tags:
      - admin-invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminInvite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInvite'
          description: ''
  /api/admin-invites/{id}/:
    get:
      operationId: admin_invites_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin invite.
        required: true
      tags:
      - admin-invites
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInvite'
          description: ''
    put:
      operationId: admin_invites_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin invite.
        required: true
      tags:
      - admin-invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AdminInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AdminInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AdminInvite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInvite'
          description: ''
    patch:
      operationId: admin_invites_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin invite.
        required: true
      tags:
      - admin-invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAdminInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAdminInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAdminInvite'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AdminInvite'
          description: ''
    delete:
      operationId: admin_invites_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this admin invite.
        required: true
      tags:
      - admin-invites
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/admin-invites/create/:
    post:
      operationId: admin_invites_create_create
      tags:
      - admin-invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateInvite'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateInvite'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateInvite'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CreateInvite'
          description: ''
  /api/admin-invites/verify-token/:
    post:
      operationId: admin_invites_verify_token_create
      tags:
      - admin-invites
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerifyToken'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerifyToken'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerifyToken'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/VerifyToken'
          description: ''
  /api/admin-management/:
    get:
      operationId: admin_management_retrieve
      description: Get all admin users (staff users)
      tags:
      - admin-management
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: admin_management_partial_update
      description: Disable/Enable an admin user (superusers cannot be disabled)
      tags:
      - admin-management
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/api/logout/:
    post:
      operationId: api_logout_create
      tags:
      - api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Logout'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Logout'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Logout'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Logout'
          description: ''
  /api/apikeys/:
    get:
      operationId: apikeys_retrieve
      description: List all API keys
      tags:
      - apikeys
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    post:
      operationId: apikeys_create
      description: Create a new API key
      tags:
      - apikeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIKey'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    patch:
      operationId: apikeys_partial_update
      description: Toggle API key active status
      tags:
      - apikeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    delete:
      operationId: apikeys_destroy
      description: Delete an API key
      tags:
      - apikeys
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/apikeys/{key_id}/:
    get:
      operationId: apikeys_retrieve_2
      description: List all API keys
      parameters:
      - in: path
        name: key_id
        schema:
          type: integer
        required: true
      tags:
      - apikeys
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    post:
      operationId: apikeys_create_2
      description: Create a new API key
      parameters:
      - in: path
        name: key_id
        schema:
          type: integer
        required: true
      tags:
      - apikeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/APIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/APIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/APIKey'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    patch:
      operationId: apikeys_partial_update_2
      description: Toggle API key active status
      parameters:
      - in: path
        name: key_id
        schema:
          type: integer
        required: true
      tags:
      - apikeys
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedAPIKey'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/APIKey'
          description: ''
    delete:
      operationId: apikeys_destroy_2
      description: Delete an API key
      parameters:
      - in: path
        name: key_id
        schema:
          type: integer
        required: true
      tags:
      - apikeys
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/current-user/:
    get:
      operationId: current_user_retrieve
      description: Get current logged in user information
      tags:
      - current-user
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/logicbuilder/addmapping/:
    post:
      operationId: logicbuilder_addmapping_create
      description: Creates a mapping between an answer and a category for a questionnaire
      summary: Create answer category mapping
      tags:
      - logicbuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateAnswerCategoryMappingRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateAnswerCategoryMappingRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateAnswerCategoryMappingRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AnswerCategoryMapping'
          description: ''
  /api/logicbuilder/deletemapping/{questionnaire_id}/{answer_id}:
    delete:
      operationId: logicbuilder_deletemapping_destroy
      parameters:
      - in: path
        name: answer_id
        schema:
          type: integer
        required: true
      - in: path
        name: questionnaire_id
        schema:
          type: integer
        required: true
      tags:
      - logicbuilder
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/logicbuilder/getcategories/:
    get:
      operationId: logicbuilder_getcategories_retrieve
      tags:
      - logicbuilder
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/logicbuilder/getquestionnaires/:
    get:
      operationId: logicbuilder_getquestionnaires_retrieve
      tags:
      - logicbuilder
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/logicbuilder/getquestions/{questionnaire_id}:
    get:
      operationId: logicbuilder_getquestions_retrieve
      parameters:
      - in: path
        name: questionnaire_id
        schema:
          type: integer
        required: true
      tags:
      - logicbuilder
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/public/questionnaire/:
    get:
      operationId: public_questionnaire_retrieve
      description: |-
        Public API endpoint to get published questionnaire by title.
        Returns questionnaire title, questions, question types, and answer choices.
        Supports both public access and API key authentication.
      tags:
      - public
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicQuestionnaire'
          description: ''
  /api/questionnairebuilder/addquestion/:
    post:
      operationId: questionnairebuilder_addquestion_create
      description: Creates a new question or updates an existing one with answers
      summary: Create or update question
      tags:
      - questionnairebuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateQuestionRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Question'
          description: ''
  /api/questionnairebuilder/createquestionnaire/:
    post:
      operationId: questionnairebuilder_createquestionnaire_create
      description: Creates a new questionnaire or updates an existing one with questions
      summary: Create or update questionnaire
      tags:
      - questionnairebuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateQuestionnaireRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateQuestionnaireRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateQuestionnaireRequest'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
          description: ''
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
          description: ''
  /api/questionnairebuilder/deletequestion/{id}:
    delete:
      operationId: questionnairebuilder_deletequestion_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questionnairebuilder
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/questionnairebuilder/deletequestionnaire/{id}:
    delete:
      operationId: questionnairebuilder_deletequestionnaire_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - questionnairebuilder
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/questionnairebuilder/getquestionnaires/:
    get:
      operationId: questionnairebuilder_getquestionnaires_retrieve
      tags:
      - questionnairebuilder
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/questionnairebuilder/getquestions/:
    get:
      operationId: questionnairebuilder_getquestions_retrieve
      tags:
      - questionnairebuilder
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/questionnairebuilder/getvideos/:
    post:
      operationId: questionnairebuilder_getvideos_create
      description: Returns ranked videos based on questionnaire answers and category
        mappings
      summary: Get videos for questionnaire preview
      tags:
      - questionnairebuilder
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GetVideosForPreview'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/GetVideosForPreview'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/GetVideosForPreview'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/VideoResponse'
          description: ''
  /api/resetalldata/:
    post:
      operationId: resetalldata_create
      description: Reset database by clearing all data and resetting auto-increment
        counters
      tags:
      - resetalldata
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/rest/rest-check/:
    get:
      operationId: rest_rest_check_retrieve
      description: This endpoint checks if the REST API is working.
      summary: Check REST API
      tags:
      - rest
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Message'
              examples:
                SuccessfulResponse:
                  value:
                    message: This message comes from the backend. If you're seeing
                      this, the REST API is working!
                  summary: Successful Response
          description: ''
  /api/seeddata/:
    post:
      operationId: seeddata_create
      description: Seed database with sample data. Throws error if database is not
        empty.
      tags:
      - seeddata
      security:
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/users/:
    get:
      operationId: users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserList'
          description: ''
    post:
      operationId: users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/users/{id}/:
    get:
      operationId: users_retrieve
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    put:
      operationId: users_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    patch:
      operationId: users_partial_update
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedUser'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedUser'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
    delete:
      operationId: users_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        description: A unique integer value identifying this user.
        required: true
      tags:
      - users
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/users/login/:
    post:
      operationId: users_login_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Login'
          description: ''
  /api/users/register/:
    post:
      operationId: users_register_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Register'
          description: ''
  /api/videomanagement/createvideo/:
    post:
      operationId: videomanagement_createvideo_create
      description: Creates a new video or updates an existing one with categories
      summary: Create or update video
      tags:
      - videomanagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateVideo'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateVideo'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateVideo'
        required: true
      security:
      - cookieAuth: []
      responses:
        '201':
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
          description: ''
  /api/videomanagement/deletevideo/{id}:
    delete:
      operationId: videomanagement_deletevideo_destroy
      parameters:
      - in: path
        name: id
        schema:
          type: integer
        required: true
      tags:
      - videomanagement
      security:
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/videomanagement/getvideos/:
    post:
      operationId: videomanagement_getvideos_create
      description: Search videos by title, duration, or category. At least one search
        parameter must be provided.
      summary: Search videos
      tags:
      - videomanagement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VideoSearch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VideoSearch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VideoSearch'
      security:
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/GetVideoWithCategories'
          description: ''
components:
  schemas:
    APIKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Key is used for authentication of public API
          maxLength: 255
        key:
          type: string
          maxLength: 64
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_used:
          type: string
          format: date-time
          nullable: true
      required:
      - created_at
      - id
      - key
      - name
    AdminInvite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        token:
          type: string
          format: uuid
          readOnly: true
        is_active:
          type: boolean
        invited_by:
          type: integer
          readOnly: true
        invited_by_email:
          type: string
          readOnly: true
        used_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        used_by:
          type: integer
          readOnly: true
          nullable: true
        used_by_email:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
      required:
      - created
      - email
      - id
      - invited_by
      - invited_by_email
      - modified
      - token
      - used_at
      - used_by
      - used_by_email
    AnswerCategoryMapping:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        questionnaire_id:
          type: integer
        answer_id:
          type: integer
        category_id:
          type: integer
        inclusive:
          type: boolean
      required:
      - answer_id
      - category_id
      - id
      - questionnaire_id
    CreateAnswerCategoryMappingRequest:
      type: object
      properties:
        questionnaire_id:
          type: integer
        answer_id:
          type: integer
        category_id:
          type: integer
        inclusive:
          type: boolean
          default: true
      required:
      - answer_id
      - category_id
      - questionnaire_id
    CreateInvite:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    CreateQuestionRequest:
      type: object
      properties:
        id:
          type: integer
          default: 0
        text:
          type: string
        type:
          type: string
        answers:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
      required:
      - answers
      - text
      - type
    CreateQuestionnaireRequest:
      type: object
      properties:
        id:
          type: integer
          default: 0
        title:
          type: string
        status:
          type: string
        questions:
          type: array
          items:
            type: integer
      required:
      - questions
      - status
      - title
    CreateVideo:
      type: object
      properties:
        id:
          type: integer
          default: 0
        title:
          type: string
        duration:
          type: string
        description:
          type: string
        categories:
          type: array
          items:
            type: object
            additionalProperties:
              type: string
      required:
      - categories
      - description
      - duration
      - title
    GetVideoWithCategories:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        title:
          type: string
          maxLength: 255
        duration:
          type: string
          maxLength: 255
        description:
          type: string
          maxLength: 255
        categories:
          type: string
          readOnly: true
      required:
      - categories
      - description
      - duration
      - id
      - title
    GetVideosForPreview:
      type: object
      properties:
        questionnaire_id:
          type: integer
        answer_ids:
          type: array
          items:
            type: integer
      required:
      - answer_ids
      - questionnaire_id
    Login:
      type: object
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    Logout:
      type: object
      properties:
        detail:
          type: string
          readOnly: true
      required:
      - detail
    Message:
      type: object
      properties:
        message:
          type: string
      required:
      - message
    PaginatedAdminInviteList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AdminInvite'
    PaginatedUserList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/User'
    PatchedAPIKey:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          description: Key is used for authentication of public API
          maxLength: 255
        key:
          type: string
          maxLength: 64
        is_active:
          type: boolean
        created_at:
          type: string
          format: date-time
          readOnly: true
        last_used:
          type: string
          format: date-time
          nullable: true
    PatchedAdminInvite:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        token:
          type: string
          format: uuid
          readOnly: true
        is_active:
          type: boolean
        invited_by:
          type: integer
          readOnly: true
        invited_by_email:
          type: string
          readOnly: true
        used_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
        used_by:
          type: integer
          readOnly: true
          nullable: true
        used_by_email:
          type: string
          readOnly: true
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
    PatchedUser:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
    PublicQuestionnaire:
      type: object
      properties:
        title:
          type: string
          maxLength: 255
        questions:
          type: string
          readOnly: true
      required:
      - questions
      - title
    Question:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        text:
          type: string
          maxLength: 255
        type:
          type: string
          maxLength: 255
        answers:
          type: string
          readOnly: true
      required:
      - answers
      - id
      - text
    Register:
      type: object
      properties:
        token:
          type: string
          format: uuid
        password:
          type: string
          writeOnly: true
          minLength: 8
        password_confirm:
          type: string
          writeOnly: true
      required:
      - password
      - password_confirm
      - token
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        email:
          type: string
          format: email
          maxLength: 255
        is_active:
          type: boolean
          description: Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        is_staff:
          type: boolean
          description: Designates whether the user can log into this admin site.
        is_superuser:
          type: boolean
          title: Superuser status
          description: Designates that this user has all permissions without explicitly
            assigning them.
        created:
          type: string
          format: date-time
          readOnly: true
        modified:
          type: string
          format: date-time
          readOnly: true
        last_login:
          type: string
          format: date-time
          nullable: true
      required:
      - created
      - email
      - id
      - modified
    VerifyToken:
      type: object
      properties:
        token:
          type: string
          format: uuid
      required:
      - token
    VideoResponse:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        duration:
          type: string
        description:
          type: string
        count:
          type: integer
      required:
      - count
      - description
      - duration
      - id
      - title
    VideoSearch:
      type: object
      properties:
        title:
          type: string
        duration:
          type: string
        category:
          type: string
  securitySchemes:
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
